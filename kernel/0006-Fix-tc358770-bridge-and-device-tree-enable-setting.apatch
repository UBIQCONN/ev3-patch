From 8e81076094afc5719659ced47505f0a3e69074da Mon Sep 17 00:00:00 2001
From: ShihYuan-Huang <timmy@ubiqconn.com>
Date: Tue, 1 Jun 2021 09:57:48 +0800
Subject: [PATCH 06/46] Fix tc358770 bridge and device tree enable setting

---
 .../boot/dts/rockchip/px30-ev3-ddr3-linux.dts | 19 +++++++++++++------
 drivers/gpu/drm/bridge/tc358770.c             | 11 ++++++++---
 2 files changed, 21 insertions(+), 9 deletions(-)

diff --git a/arch/arm64/boot/dts/rockchip/px30-ev3-ddr3-linux.dts b/arch/arm64/boot/dts/rockchip/px30-ev3-ddr3-linux.dts
index 111164294506..17a09b70e073 100644
--- a/arch/arm64/boot/dts/rockchip/px30-ev3-ddr3-linux.dts
+++ b/arch/arm64/boot/dts/rockchip/px30-ev3-ddr3-linux.dts
@@ -99,7 +99,7 @@
 			240 241 242 243 244 245 246 247
 			248 249 250 251 252 253 254 255>;
 		default-brightness-level = <200>;
-		enable = <&gpio0 RK_PC1 GPIO_ACTIVE_HIGH>;
+		enable-gpios = <&gpio0 RK_PC1 GPIO_ACTIVE_HIGH>;
 	};
 
 	charge-animation {
@@ -289,7 +289,7 @@
 
                 width-mm = <121>;
                 height-mm = <68>;
-		enable-gpios = <&gpio3 RK_PA1 GPIO_ACTIVE_HIGH>;
+		enable-gpios= <&gpio3 RK_PA1 GPIO_ACTIVE_HIGH>;
 		pinctrl-names = "default";
 		pinctrl-0 = <&lcd_panel_reset>;
 
@@ -807,6 +807,9 @@
 		clocks = <&osc 0>;
 		clock-names = "refclk";
 
+		pinctrl-names = "default";
+		pinctrl-0 = <&edp_enable_drv>;
+
 	        ports {
         	        #address-cells = <1>;
 	                #size-cells = <0>;
@@ -1028,19 +1031,23 @@
 	
 	lcd-panel {
 		lcd_panel_reset: lcd-panel-reset {
-			rockchip,pins = <3 RK_PA1 RK_FUNC_GPIO &pcfg_pull_none>;
+			rockchip,pins = <3 RK_PA1 RK_FUNC_GPIO &pcfg_pull_up>;
 		};
 
 		edp_vcc1v2_drv: edp-vcc1v2-drv {
-			rockchip,pins = <3 RK_PA2 RK_FUNC_GPIO &pcfg_pull_none>;
+			rockchip,pins = <3 RK_PA2 RK_FUNC_GPIO &pcfg_pull_up>;
 		};
 
 		edp_vcc1v8_drv: edp-vcc1v8-drv {
-			rockchip,pins = <0 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>;
+			rockchip,pins = <0 RK_PB5 RK_FUNC_GPIO &pcfg_pull_up>;
 		};
 
 		bl_en_drv: bl-en-drv {
-			rockchip,pins = <0 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
+			rockchip,pins = <0 RK_PC1 RK_FUNC_GPIO &pcfg_pull_up>;
+		};
+
+		edp_enable_drv: edp-enable-drv {
+			rockchip,pins = <3 RK_PB5 RK_FUNC_GPIO &pcfg_pull_up>;
 		};
 	};
 
diff --git a/drivers/gpu/drm/bridge/tc358770.c b/drivers/gpu/drm/bridge/tc358770.c
index cbb23bd5aea9..c09004320972 100644
--- a/drivers/gpu/drm/bridge/tc358770.c
+++ b/drivers/gpu/drm/bridge/tc358770.c
@@ -286,6 +286,7 @@ static inline struct tc_data *connector_to_tc(struct drm_connector *c)
 
 static int tc358770_write(struct regmap *map, unsigned int reg, unsigned int val)
 {
+	
 	return regmap_write(map, reg, val);
 }	
 
@@ -1342,6 +1343,11 @@ static void tc_bridge_pre_enable(struct drm_bridge *bridge)
 	struct tc_data *tc = bridge_to_tc(bridge);
 
 	dev_dbg(tc->dev,  "%s start\n", __func__);
+
+        if (tc->enable_gpio){
+		gpiod_direction_output(tc->enable_gpio, 1);
+	}	
+	
 	tc_set_dsi_configuration(tc);
 	drm_panel_prepare(tc->panel);
 }
@@ -1441,7 +1447,6 @@ static int tc_bridge_probe(struct i2c_client *client,
 	struct tc_data *tc;
 	int ret;
 
-	printk(KERN_INFO"%s start\n", __func__);
 	if (!i2c_check_functionality(client->adapter, I2C_FUNC_I2C)) {
 		DRM_ERROR("device doesn't support I2C\n");
 		return -ENODEV;
@@ -1467,8 +1472,8 @@ static int tc_bridge_probe(struct i2c_client *client,
 
 	dev_set_drvdata(&client->dev, tc);
 
-	tc->enable_gpio = devm_gpiod_get(dev, "enable",
-					    GPIOD_OUT_LOW);
+	tc->enable_gpio = devm_gpiod_get_optional(tc->dev, "enable",
+                                                  GPIOD_ASIS);
 	if (IS_ERR(tc->enable_gpio)) {
 		DRM_ERROR("failed to get enable gpio from DT\n");
 		ret = PTR_ERR(tc->enable_gpio);
-- 
2.17.1

