From 8b3aca74d97edf4e6aa829af0ad6f95377611541 Mon Sep 17 00:00:00 2001
From: ShihYuan-Huang <timmy@ubiqconn.com>
Date: Wed, 16 Jun 2021 18:14:58 +0800
Subject: [PATCH 15/46] Add headphone detect on EV3

---
 .../boot/dts/rockchip/px30-ev3-ddr3-linux.dts | 61 ++++++++++++++++---
 drivers/misc/gpio_trig.c                      | 35 +++++++----
 2 files changed, 76 insertions(+), 20 deletions(-)

diff --git a/arch/arm64/boot/dts/rockchip/px30-ev3-ddr3-linux.dts b/arch/arm64/boot/dts/rockchip/px30-ev3-ddr3-linux.dts
index 9ec2d9f673ca..cd70b95f39db 100644
--- a/arch/arm64/boot/dts/rockchip/px30-ev3-ddr3-linux.dts
+++ b/arch/arm64/boot/dts/rockchip/px30-ev3-ddr3-linux.dts
@@ -131,15 +131,15 @@
 			sound-dai = <&rk809_codec>;
 		};
 	};
-
+/*
 	rk_headset {
 		compatible = "rockchip_headset";
-		headset_gpio = <&gpio3 RK_PA7 GPIO_ACTIVE_LOW>;	/* ?? */
+		headset_gpio = <&gpio3 RK_PA7 GPIO_ACTIVE_LOW>;	
 		pinctrl-names = "default";
 		pinctrl-0 = <&hp_det>;
 		io-channels = <&saradc 1>;
 	};
-
+*/
 	sdio_pwrseq: sdio-pwrseq {
 		compatible = "mmc-pwrseq-simple";
 		/*clocks = <&rk809 1>;*/
@@ -272,6 +272,30 @@
 		regulator-boot-on;
 	};
 
+	cmedia_power: cmedia-regulator {
+		compatible = "regulator-fixed";
+		enable-active-high;
+		gpio = <&gpio3 RK_PC3 GPIO_ACTIVE_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&cmedia_drv>;
+		regulator-name = "cmedia_power";
+		regulator-always-on;
+		regulator-boot-on;
+		startup-delay-us = <200000>;
+	};
+
+	cmedia_reset: cmedia-rst-regulator {
+		compatible = "regulator-fixed";
+		enable-active-high;
+		gpio = <&gpio3 RK_PC4 GPIO_ACTIVE_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&cmedia_rst_drv>;
+		regulator-name = "cmedia_reset";
+		regulator-always-on;
+		regulator-boot-on;
+		startup-delay-us = <200000>;
+	};
+
 	wireless-wlan {
 		compatible = "wlan-platdata";
 		wifi_chip_type = "ap6398sv";   
@@ -389,6 +413,18 @@
 		on_timing = <100 100 100>;
 		off_timing = <100 100 100>;
 	};
+
+	headphone_detect {
+                compatible = "gpio-trig";
+                pinctrl-names = "default";
+                pinctrl-0 = <&hp_det>;
+		irqpin-gpios = <&gpio3 RK_PA7 GPIO_ACTIVE_HIGH>;
+		invert-interrupt;
+		power-gpios = <&gpio3 RK_PB2 GPIO_ACTIVE_LOW>,
+				<&gpio3 RK_PB1 GPIO_ACTIVE_HIGH>; 
+		on_timing = <100 100>;
+		off_timing = <100 100>;
+	};
 };
 
 &display_subsystem {
@@ -725,10 +761,10 @@
 			clock-names = "mclk";
 			pinctrl-names = "default";
 			pinctrl-0 = <&i2s1_2ch_mclk>;
-			hp-volume = <20>;
+			hp-volume = <25>;
 			spk-volume = <3>;
 			use-ext-amplifier;
-			spk-ctl-gpios = <&gpio3 RK_PB2 GPIO_ACTIVE_HIGH>;
+		/*	spk-ctl-gpios = <&gpio3 RK_PB2 GPIO_ACTIVE_HIGH>;  */
 			status = "okay";
 		};
 	};
@@ -1096,9 +1132,19 @@
 		};
 	};
 
-	headphone {
+	audio {
 		hp_det: hp-det {
-			rockchip,pins = <3 RK_PA7 RK_FUNC_GPIO &pcfg_pull_down>;
+			rockchip,pins = <3 RK_PB1 RK_FUNC_GPIO &pcfg_pull_none>,
+					<3 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>,
+					<3 RK_PA7 RK_FUNC_GPIO &pcfg_pull_down>;
+		};
+
+		cmedia_drv: cmedia-drv {
+			rockchip,pins = <3 RK_PC3 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+
+		cmedia_rst_drv: cmedia-rst-drv {
+			rockchip,pins = <3 RK_PC4 RK_FUNC_GPIO &pcfg_pull_none>;
 		};
 	};
 
@@ -1152,6 +1198,7 @@
 			rockchip,pins = <3 RK_PC5 RK_FUNC_GPIO &pcfg_pull_none>;
 		};
 	};
+
 };
 
 /* DON'T PUT ANYTHING BELOW HERE.  PUT IT ABOVE PINCTRL */
diff --git a/drivers/misc/gpio_trig.c b/drivers/misc/gpio_trig.c
index 8ab23a07886f..d67c7998c368 100644
--- a/drivers/misc/gpio_trig.c
+++ b/drivers/misc/gpio_trig.c
@@ -38,6 +38,7 @@ struct gpio_trig {
 	struct gpio_desc	*intgpio;
 	struct delayed_work	work;
 	int irq;
+	bool invert;
 	struct mutex lock;
 };
 
@@ -51,13 +52,13 @@ static void gpios_array_work(struct work_struct *work)
 	
 	mutex_lock(&gt_cur->lock);
 	for (i=0; i<ga->ndescs; i++){
-		gpiod_set_value_cansleep(ga->desc[i], on);
-		if (i != (ga->ndescs-1))
-		{	
-			if (on)
-				mdelay(gt_cur->on_array[i]);
-			else	
-				mdelay(gt_cur->off_array[i]);
+		if (on){
+			mdelay(gt_cur->on_array[i]);
+			gpiod_set_value_cansleep(ga->desc[i], 1);
+		}	
+		else{	
+			mdelay(gt_cur->off_array[i]);
+			gpiod_set_value_cansleep(ga->desc[ga->ndescs - i - 1], 0);
 		}	
 	}
 	mutex_unlock(&gt_cur->lock);
@@ -66,9 +67,11 @@ static void gpios_array_work(struct work_struct *work)
 static irqreturn_t dummy_interrupt(int irq, void *data)
 {
 	struct gpio_trig *gt_cur = data;
-	int value;
+	bool value;
 
-	value = gpiod_get_value(gt_cur->intgpio);
+	value = gpiod_get_value(gt_cur->intgpio)? true : false; 
+	if (gt_cur->invert)
+		value = !value;
 	if (value !=  gt_cur->current_status){
 		gt_cur->current_status = value;
 		schedule_delayed_work(&gt_cur->work, msecs_to_jiffies(10));
@@ -82,6 +85,7 @@ static int gpio_trig_probe(struct platform_device *pdev)
 	int ret = 0;
 	struct device_node *np = pdev->dev.of_node;
 	int i;
+	bool value;
 
 	gt_cur = devm_kzalloc(&pdev->dev, sizeof(*gt_cur), GFP_KERNEL);
 	if (!gt_cur)
@@ -110,7 +114,9 @@ static int gpio_trig_probe(struct platform_device *pdev)
 		ret = PTR_ERR(gt_cur->gpios_array);
 		goto err_end;
 	}
-	 
+	
+	gt_cur->invert = of_property_read_bool(np, "invert-interrupt");
+
 	mutex_init(&gt_cur->lock);
 
 	gt_cur->intgpio = devm_gpiod_get_optional(gt_cur->dev, "irqpin", GPIOD_IN);
@@ -126,9 +132,12 @@ static int gpio_trig_probe(struct platform_device *pdev)
 		goto err_end;
 	}
 
-	gt_cur->current_status = gpiod_get_value(gt_cur->intgpio);
-	if (gt_cur->current_status)
-		schedule_delayed_work(&gt_cur->work, msecs_to_jiffies(10));
+	value = gpiod_get_value(gt_cur->intgpio)? true : false; 
+	if (gt_cur->invert)
+		value = !value;
+	gt_cur->current_status = value;
+
+	schedule_delayed_work(&gt_cur->work, msecs_to_jiffies(10));
 	dev_info(gt_cur->dev, "gpio_trig_probe success\n");
 
 err_end:
-- 
2.17.1

